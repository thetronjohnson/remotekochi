---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
const cafes = await Astro.glob("./cafes/*.md");
const beaches = await Astro.glob("./beaches/*.md");
const coworkingSpaces = await Astro.glob("./coworking-spaces/*.md");
---

<Layout title="Remote Kochi">
  <main>
    <h1>Remote <span class="text-gradient">Kochi</span></h1>
    <p>Work Friendly cafes and spots for nomads</p>
    <ul role="list" class="link-card-grid">
      {
        cafes?.map(({ frontmatter: { map, name, location } }) => (
          <Card href={map} title={name} location={location} type="Cafe" />
        ))
      }
      {
        coworkingSpaces?.map(({ frontmatter: { map, name, location } }) => (
          <Card href={map} title={name} location={location} type="Coworking Space" />
        ))
      }
      {
        beaches?.map(({ frontmatter: { map, name, location } }) => (
          <Card href={map} title={name} location={location} type="Beach" />
        ))
      }
    </ul>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
